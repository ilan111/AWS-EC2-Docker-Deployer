services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  kafka:
    container_name: kafka
    image: redpandadata/redpanda:latest
    command:
      - redpanda
      - start
      - --smp 1
      - --memory 256M
      - --overprovisioned
      - --node-id 0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"

  api:
    build:
      context: .
      dockerfile: api-server/Dockerfile
    container_name: api
    environment:
      DB_URL: postgresql://postgres:postgres@postgres:5432/postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
      - kafka
    ports:
      - "8000:8000"

  logic-worker:
    build:
      context: .
      dockerfile: logic-worker/Dockerfile
    container_name: logic-worker
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DB_URL: postgresql://postgres:postgres@postgres:5432/postgres
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      #OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - kafka
      - postgres

  streamlit:
    container_name: streamlit_app
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - "80:8501"
    restart: always
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    
volumes:
  pg_data:

